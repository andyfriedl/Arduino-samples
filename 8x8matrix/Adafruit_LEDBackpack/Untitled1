/*************************************************** 
 * This is a library for our I2C LED Backpacks
 * 
 * Designed specifically to work with the Adafruit LED Matrix backpacks 
 * ----> http://www.adafruit.com/products/872
 * ----> http://www.adafruit.com/products/871
 * ----> http://www.adafruit.com/products/870
 * 
 * These displays use I2C to communicate, 2 pins are required to 
 * interface. There are multiple selectable I2C addresses. For backpacks
 * with 2 Address Select pins: 0x70, 0x71, 0x72 or 0x73. For backpacks
 * with 3 Address Select pins: 0x70 thru 0x77
 * 
 * Adafruit invests time and resources providing this open source code, 
 * please support Adafruit and open-source hardware by purchasing 
 * products from Adafruit!
 * 
 * Written by Limor Fried/Ladyada for Adafruit Industries.  
 * BSD license, all text above must be included in any redistribution
 ****************************************************/

#include <Wire.h>
#include "Adafruit_LEDBackpack.h"
#include "Adafruit_GFX.h"
int y, z, x, cx, cy;
Adafruit_8x8matrix matrix = Adafruit_8x8matrix();

void setup() {
  Serial.begin(9600);
  Serial.println("8x8 LED Matrix Test");

  matrix.begin(0x70);  // pass in the address
}
/*
static const uint8_t PROGMEM
 smile_bmp[] =
 { B00111100,
 B01000010,
 B10100101,
 B10000001,
 B10100101,
 B10011001,
 B01000010,
 B00111100 },
 neutral_bmp[] =
 { B00111100,
 B01000010,
 B10100101,
 B10000001,
 B10111101,
 B10000001,
 B01000010,
 B00111100 },
 frown_bmp[] =
 { B00111100,
 B01000010,
 B10100101,
 B10000001,
 B10011001,
 B10100101,
 B01000010,
 B00111100 };
 */
static const uint8_t PROGMEM
crosshatch[] =
{ 
  B10101010,
  B01010101,
  B10101010,
  B01010101,
  B10101010,
  B01010101,
  B10101010,
  B01010101 };
static const uint8_t PROGMEM
crosshatchx[] =
{ 
  B01010101,
  B10101010,
  B01010101,
  B10101010,
  B01010101,
  B10101010,
  B01010101,
  B10101010 };
//-------------------------------------------------
static const uint8_t PROGMEM
alien1a[] = 
{
  B00011000, // This is the first frame for alien #1
  B00111100, // If you squint you can kind of see the
  B01111110, // image in the 0's and 1's.
  B11011011,
  B11111111,
  B00100100,
  B01011010,
  B10100101,
};
static const uint8_t PROGMEM
alien1b[] = 
{
  B00011000, // This is the second frame for alien #1
  B00111100,
  B01111110,
  B11011011,
  B11111111,
  B00100100,
  B01011010,
  B01000010
};
//-----------------------------------------
static const uint8_t PROGMEM
alien2a[] = 
{
  B00000000, // First frame for alien #2
  B00111100,
  B01111110,
  B11011011,
  B11011011,
  B01111110,
  B00100100,
  B11000011
};
static const uint8_t PROGMEM
alien2b[] = 
{
  B00111100, // Second frame for alien #2
  B01111110,
  B11011011,
  B11011011,
  B01111110,
  B00100100,
  B00100100,
  B00100100
};
//-----------------------------------
static const uint8_t PROGMEM
alien3a[] = 
{
  B00100100, // First frame for alien #3
  B00100100,
  B01111110,
  B11011011,
  B11111111,
  B11111111,
  B10100101,
  B00100100
};

static const uint8_t PROGMEM
alien3b[] = 
{
  B00100100, // Second frame for alien #3
  B10100101,
  B11111111,
  B11011011,
  B11111111,
  B01111110,
  B00100100,
  B01000010
};
//-------------------------------
static const uint8_t PROGMEM
alien4a[] = 
{
  B00111100, // First frame for alien #4
  B01111110,
  B00110011,
  B01111110,
  B00111100,
  B00000000,
  B00001000,
  B00000000
};

static const uint8_t PROGMEM
alien4b[] = 
{
  B00111100, // Second frame for alien #4
  B01111110,
  B10011001,
  B01111110,
  B00111100,
  B00000000,
  B00001000,
  B00001000
};
static const uint8_t PROGMEM
alien4c[] = 
{
  B00111100, // Third frame for alien #4 (NOT a repeat of frame 1)
  B01111110,
  B11001100,
  B01111110,
  B00111100,
  B00000000,
  B00000000,
  B00001000
};
static const uint8_t PROGMEM
alien4d[] = 
{
  B00111100, // Fourth frame for alien #4 (NOT a repeat of frame 2)
  B01111110,
  B01100110,
  B01111110,
  B00111100,
  B00000000,
  B00000000,
  B00000000
};
//-------------------------------------
static const uint8_t PROGMEM
sevena[] = 
{
  B00000000, // Second frame for alien #2
  B11100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00000000,
  B00000000
};
static const uint8_t PROGMEM
nineb[] = 
{
  B00000000, // Second frame for alien #2
  B00001110,
  B00001010,
  B00001110,
  B00000010,
  B00001110,
  B00000000,
  B00000000
};
// -----------------------------------------------

static const uint8_t PROGMEM
strobeOn[] = 
{
  B11111111, // 1 frame on
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111
};


static const uint8_t PROGMEM
strobeOff[] = 
{
  B00000000, // 1 frame off
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
};

void loop() {
  matrix.setRotation(1);
  matrix.setBrightness(1);

  /* matrix.clear();
   matrix.drawBitmap(0, 0, smile_bmp, 8, 8, LED_ON);
   matrix.writeDisplay();
   delay(500);
   
   matrix.clear();
   matrix.drawBitmap(0, 0, neutral_bmp, 8, 8, LED_ON);
   matrix.writeDisplay();
   delay(500);
   
   matrix.clear();
   matrix.drawBitmap(0, 0, frown_bmp, 8, 8, LED_ON);
   matrix.writeDisplay();
   delay(500);
   */

   // --------------LINE----------------------------
   
  /*
  for (x=0; x<10; x++) {
   matrix.clear();
   matrix.drawLine(random(8),0, random(8),7, LED_ON);
   matrix.drawLine(0,random(8), 7,random(8), LED_ON);
   matrix.writeDisplay();  // write the changes we just made to the display
   delay(222);
   }
   */

  // --------------Rect----------------------------
  /*
  matrix.clear();
   matrix.drawRect(0,0, 8,8, LED_ON);
   matrix.fillRect(2,2, 4,4, LED_ON);
   matrix.writeDisplay();  // write the changes we just made to the display
   delay(500);
   // --------------circle----------------------------
   
   matrix.clear();
   matrix.drawCircle(3,3, 3, LED_ON);
   matrix.writeDisplay();  // write the changes we just made to the display
   delay(500);
   */
 
  // ------------------ SUN ----------------------------
   matrix.clear();
   // col,row-start
   matrix.fillCircle(3,3, 2, LED_ON);
   matrix.drawLine(0,0, 6,6, LED_ON);
   matrix.drawLine(0,6, 6,0, LED_ON);
   matrix.drawLine(0,3, 6,3, LED_ON);
   matrix.drawLine(3,0, 3,6, LED_ON);
 
   matrix.writeDisplay();  // write the changes we just made to the display
   delay(500);
   

  matrix.setBrightness(1);

}
